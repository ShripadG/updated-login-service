<?xml version="1.0"?>
<doc>
    <assembly>
        <name>loginservice</name>
    </assembly>
    <members>
        <member name="F:employeeservice.Common.DBNames.mydb">
            <summary>
            Name of the table/doc to store employee master data
            </summary>
        </member>
        <member name="F:employeeservice.Common.DBNames.auditdata">
            <summary>
            Name of the table/doc to store audit data
            </summary>
        </member>
        <member name="F:employeeservice.Common.DBNames.loginusers">
            <summary>
            Name of the table/doc to store loginusers data
            </summary>
        </member>
        <member name="F:employeeservice.Common.DBNames.loginusertype">
            <summary>
            Name of the table/doc to store loginusers data
            </summary>
        </member>
        <member name="F:employeeservice.Common.DBNames.userrights">
            <summary>
            Name of the table/doc to store loginusers data
            </summary>
        </member>
        <member name="T:employeeservice.Common.MyMiddlewareExtensions">
            <summary>
            Referred : https://andrewlock.net/adding-default-security-headers-in-asp-net-core/
            </summary>
        </member>
        <member name="M:employeeservice.Common.MyMiddlewareExtensions.UseSecurityHeadersMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder,employeeservice.Common.SecurityHeadersBuilder)">
            <summary>
            This method is used to for security headers middleware .
            <param name="app"></param>
            <param name="builder"></param>
            </summary>
            <returns></returns>
        </member>
        <member name="T:employeeservice.Common.SecurityHeadersBuilder">
            <summary>
            Referred : https://andrewlock.net/adding-default-security-headers-in-asp-net-core/
            </summary>
        </member>
        <member name="M:employeeservice.Common.SecurityHeadersBuilder.AddCustomHeader(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="header"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:employeeservice.Common.SecurityHeadersBuilder.RemoveHeader(System.String)">
            <summary>
            This method is used to remove header.
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:employeeservice.Common.SecurityHeadersBuilder.Build">
            <summary>
            used to build security policy.
            </summary>
            <returns></returns>
        </member>
        <member name="T:employeeservice.Common.SecurityHeadersMiddleware">
            <summary>
            Referred : https://andrewlock.net/adding-default-security-headers-in-asp-net-core/
            </summary>
        </member>
        <member name="M:employeeservice.Common.SecurityHeadersMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,employeeservice.Common.SecurityHeadersPolicy)">
            <summary>
            
            </summary>
            <param name="next"></param>
            <param name="policy"></param>
        </member>
        <member name="M:employeeservice.Common.SecurityHeadersMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoking Http context.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:employeeservice.Common.SecurityHeadersPolicy">
            <summary>
            Referred : https://andrewlock.net/adding-default-security-headers-in-asp-net-core/
            </summary>
        </member>
        <member name="P:employeeservice.Common.SecurityHeadersPolicy.SetHeaders">
            <summary>
            Setting headers.
            </summary>
        </member>
        <member name="P:employeeservice.Common.SecurityHeadersPolicy.RemoveHeaders">
            <summary>
            Removing headers.
            </summary>
        </member>
        <member name="M:loginservice.Controllers.LoginUsersController.Get">
            <summary>
            Get all the records
            </summary>
            <returns>returns all records from database</returns>
        </member>
        <member name="M:loginservice.Controllers.LoginUsersController.GetByID(System.String)">
            <summary>
            Get record by ID
            </summary>
            <param name="id">ID to be selected</param>
            <returns>record for the given id</returns>
        </member>
        <member name="M:loginservice.Controllers.LoginUsersController.Post(loginservice.Models.LoginUsersAddRequest)">
            <summary>
            Create a new record
            </summary>
            <param name="Loginuser">New record to be created</param>
            <returns>status of the newly added record</returns>
        </member>
        <member name="M:loginservice.Controllers.LoginUsersController.Update(loginservice.Models.LoginUsers)">
            <summary>
            Update an existing record by giving _id and _rev values
            </summary>
            <param name="LoginUser">record to be updated for given _id and _rev</param>
            <returns>status of the record updated</returns>
        </member>
        <member name="M:loginservice.Controllers.LoginUsersController.ChangePassword(loginservice.Models.ValidateLoginUsersAddRequest)">
            <summary>
            Update an existing record by giving _id and _rev values
            </summary>
            <param name="validateloginuser">record to be updated for given _id and _rev</param>
            <returns>status of the record updated</returns>
        </member>
        <member name="M:loginservice.Controllers.LoginUsersController.Delete(System.String,System.String)">
            <summary>
            Delete the record for the given id
            </summary>
            <param name="id">record id to bb deleted</param>
            <param name="rev">revision number of the record to be deleted</param>
            <returns>status of the record deleted</returns>
        </member>
        <member name="M:loginservice.Controllers.LoginUsersController.PostLogin(loginservice.Models.ValidateLoginUsersAddRequest)">
            <summary>
            Create a new record
            </summary>
            <param name="LoginUser">New record to be created</param>
        </member>
        <member name="M:loginservice.Controllers.UsersRightsController.Get">
            <summary>
            Get all the records
            </summary>
            <returns>returns all records from database</returns>
        </member>
        <member name="M:loginservice.Controllers.UsersRightsController.GetByID(System.String)">
            <summary>
            Get record by ID
            </summary>
            <param name="id">ID to be selected</param>
            <returns>record for the given id</returns>
        </member>
        <member name="M:loginservice.Controllers.UsersRightsController.Post(loginservice.Models.UserRightsAddRequest)">
            <summary>
            Create a new record
            </summary>
            <param name="userRights">New record to be created</param>
            <returns>status of the newly added record</returns>
        </member>
        <member name="M:loginservice.Controllers.UsersRightsController.Update(loginservice.Models.UserRights)">
            <summary>
            Update an existing record by giving _id and _rev values
            </summary>
            <param name="userRights">record to be updated for given _id and _rev</param>
            <returns>status of the record updated</returns>
        </member>
        <member name="M:loginservice.Controllers.UsersRightsController.Delete(System.String,System.String)">
            <summary>
            Delete the record for the given id
            </summary>
            <param name="id">record id to bb deleted</param>
            <param name="rev">revision number of the record to be deleted</param>
            <returns>status of the record deleted</returns>
        </member>
        <member name="T:loginservice.Services.ICloudantService">
            <summary>
            This is the interface for 
            </summary>
        </member>
        <member name="M:loginservice.Services.ICloudantService.CreateAsync(System.Object,System.String)">
            <summary>
            Create a new record
            </summary>
            <param name="item">the record to be added.</param>
            <param name="dbname">the db table to be updated</param>
            <returns>returns the status of the add record</returns>
        </member>
        <member name="M:loginservice.Services.ICloudantService.UpdateAsync(System.Object,System.String)">
            <summary>
            Update given record
            </summary>
            <param name="item">the record to be updated</param>
            <param name="dbname">the db table to be updated</param>
            <returns>returns the status of the updated record</returns>
        </member>
        <member name="M:loginservice.Services.ICloudantService.GetAllAsync(System.String)">
            <summary>
            Returns the list of all records in the database
            </summary>
            <returns>Returns the list of all records in the database</returns>
        </member>
        <member name="M:loginservice.Services.ICloudantService.GetByIdAsync(System.String,System.String)">
            <summary>
            Returns the record for the given id.
            </summary>
            <param name="id">id of the record to be retrieved</param>
            <returns>returns the record for given id</returns>
        </member>
        <member name="M:loginservice.Services.ICloudantService.DeleteAsync(System.String,System.String,System.String)">
            <summary>
            Deletes the record for the given id
            </summary>
            <param name="id">id of the record to be deleted</param>
            <param name="rev">latest revision number of the record to be deleted</param>
            <returns>returns </returns>
        </member>
        <member name="M:loginservice.Services.ICloudantService.BulkUpload">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
